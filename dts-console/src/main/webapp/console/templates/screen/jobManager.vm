<input type="hidden" id="clusterId" value="$!clusterId" xmlns="http://www.w3.org/1999/html"/>
<input type="hidden" id="outerUser" value="$outerUser" />
<input type="hidden" id="defaultGroup" value="$!defaultGroup">
<input type="hidden" id="clusterName" value="$!clusterName">
<div class="navbar navbar-default navbar-fixed-top" role="navigation" style="background:#FFFFFF">
	<div class="container-fluid">
		<div class="row">
			<div class="navbar-header">
				<a class="navbar-brand" href="#" style='color:#FF9933;font-weight:500'>&nbsp;&nbsp;分布式定时服务DTS</a>
			</div>
			<div class="navbar-collapse collapse">
				<ul class="nav navbar-nav">
					<li class="active">
						<a href="jobManager.htm" style="color:#FFFFFF;background:#555555">Job配置</a>
					</li>
					<li >
						<a href="jobControl.htm" style='color:#000000;weight:600'>Job管控</a>
					</li>
					#if($!showAuth)
					<li >
						<a href="jobAuth.htm" style='color:#000000;weight:600'>权限控制</a>
					</li>
					#end
					#if($!showAdvertisement)
					<li >
						<a href="$!{timerMsgDomainName}tmq-console/" target="_blank" style='color:#000000;weight:600'>TMQ</a>
					</li>
					<li >
						<a href="http://gitlab.alibaba-inc.com/middleware-dts/tmq-wiki/wikis/home" target="_blank" style='color:#000000;weight:600'>定时消息wiki</a>
					</li>
					#end
				</ul>
				<div class="pull-right" style="padding-right:50px">
					<table >
						<tr height="50">
							<td >
								<span style="color:#000000">欢迎&nbsp;$!userName</span>
                            </td>
                        </tr>
                    </table>
    			</div>
			</div>
		</div>
	</div>
</div>
<div class="container-fluid">
	<div class="col-sm-3 col-md-2">
		<div class="list-group">
			<a href="#" class="list-group-item active" style="background:#555555">分组管理</a>
            <a href="jobRelation.htm?clusterId=$!clusterId" class="list-group-item">Job依赖配置</a>
		</div>
	</div>
	<div class="col-sm-9 col-md-10">
		<div class="row">
			<h4 class="header">分组管理</h4>
		</div>
		<div class="row">
			<div class="pull-right" style="padding-right:30px">
				<a data-toggle="modal" href="#" class="btn btn-info" onclick="showGroupModal()">创建分组</a>
			</div>
			<div>
				#foreach($cluster in $userServerCluster.entrySet())
                    #if($!cluster.getValue().getId() == $!clusterId)
					    <button id="reginId_all_btn" type="button" class="btn btn-info" onclick="showGroupCluster('$!cluster.getValue().getId()')">
                        $!cluster.getValue().getDescription()
                        </button>
                    #else
                        <button id="reginId_all_btn" type="button" class="btn btn-default" onclick="showGroupCluster('$!cluster.getValue().getId()')">
                            $!cluster.getValue().getDescription()
                        </button>
                    #end
				#end
			</div>
		</div>
		<br>
		<div>
			<table class="table table-bordered">
				#foreach($group in $userGroups)
					<tr>
						<td>
							<table class="table table-bordered" >
								<tr>
									<td width="200" align="center">
										分组ID:$group.getSystemDefineGroupId()
									</td>
									<td>
										&nbsp;&nbsp;&nbsp;$!group.getGroupDesc()
									</td>
									<td width="120" align="center">
										Job数:<label id="label_$!group.getSystemDefineGroupId()">$group.getGroupJobNum()</label>
										<input type="hidden" id="createJobFlow_$!group.getSystemDefineGroupId()" value="$!group.createJobFlow"/>
										<input type="hidden" id="updateJobFlow_$!group.getSystemDefineGroupId()" value="$!group.updateJobFlow"/>
										<input type="hidden" id="deleteJobFlow_$!group.getSystemDefineGroupId()" value="$!group.deleteJobFlow"/>
									</td>
								</tr>
								<tr>
									<td colspan="3">
										<table width="100%">
											<tr >
												<td width="80"><button name="reginId_all_btn"  data-toggle="modal" class="btn btn-info" onclick="showJobModal('$!group.getSystemDefineGroupId()')">创建Job</button></td>
												<td width="80"><button id="reginId_all_btn_$!group.getSystemDefineGroupId()" name="reginId_all_btn" type="button" class="btn btn-default" onclick="showGroupJobs('$!group.getSystemDefineGroupId()')">查看Job列表</button></td>
												<td ></td>
												<td width="200"><input id="search-text-id-$!group.getSystemDefineGroupId()" type="text" size="60"/></td>
												<td width="80"><a onclick="loadGroupJobsData('$!group.getSystemDefineGroupId()')">搜索</a></td>
												<td ></td>
												<td width="100" align="center"><a name="reginId_all_btn" onclick="deleteGroup('$!group.getSystemDefineGroupId()')">删除分组</a></td>
											</tr>
                                        </table>
									</td>
								</tr>
							</table>
							<div id="group_$!group.getSystemDefineGroupId()" style="display:none;" >
							</div>
						</td>
					</tr>
				#end
			</table>
		</div>
	</div>
</div>

<div id="group-modal" class="modal fade in" role="dialog">
	<div class="modal-dialog">
        <div class="modal-content">
    		<div class="modal-header">
    			<a class="close" data-dismiss="modal">×</a>
    			<h4 class="modal-title">新建分组</h4>
            </div>
            <div class="modal-body">
    			友情提示:分组用于区别一批机器,通常一个应用对应于一个分组.<br>每个分组都可以包含若干个Job.
            	<br>
            	<br>
    			分组描述:<br>
    			<textarea id="groupDesc" rows="6" cols="89"></textarea>
				<br><br>
##				<font color="red">注意！安全程度要求比较高的话可以勾选上下面三个选项</font><br>
##				<input type="checkbox" id="createJobFlow" name="createJobFlow">创建Job需主管审批</input>&nbsp;&nbsp;
##                <input type="checkbox" id="updateJobFlow" name="updateJobFlow">修改Job需主管审批</input>&nbsp;&nbsp;
##                <input type="checkbox" id="deleteJobFlow" name="deleteJobFlow">删除Job需主管审批</input>
				
          	</div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                <button type="button" class="btn btn-primary" onclick="createGroup()">确定</button>
            </div>
        </div>
	</div>
</div>

<div id="cron-modal" class="modal fade in" role="dialog">
	<div class="modal-dialog">
        <div class="modal-content">
    		<div class="modal-header">
    			<h4 class="modal-title">创建时间表达式</h4>
            </div>
            <div class="modal-body">
                <font style="color:red;">提示：按照定时需求在相应的时间单位区间上设置,通配符*表示所有值 ? 表示不指定值 - 表示区间  ,表示指定多个值  /用于递增触发,详情请阅读接入文档<br>每5s或者以下运行一次的Job在阿里云环境下系统会做限制</font>
				<div class="easyui-tabs" style="width:550px;height:460px" >
						<div title="秒">
                        <div class="line">
                            <input type="radio" checked="checked" name="second" onclick="everyTime(this)">
                            每秒 允许的通配符[, - * /]</div>
                        <div class="line">
                            <input type="radio" name="second" onclick="cycle(this)">
                            周期从
                            <input class="numberspinner" style="width: 60px;" data-options="min:1,max:58" value="1"
                                id="secondStart_0">
                            -
                            <input class="numberspinner" style="width: 60px;" data-options="min:2,max:59" value="2"
                                id="secondEnd_0">
                            秒</div>
                        <div class="line">
                            <input type="radio" name="second" onclick="startOn(this)">
                            从
                            <input class="numberspinner" style="width: 60px;" data-options="min:0,max:59" value="0"
                                id="secondStart_1">
                            秒开始,每
                            <input class="numberspinner" style="width: 60px;" data-options="min:1,max:59" value="1"
                                id="secondEnd_1">
                            秒执行一次</div>
                        <div class="line">
                            <input type="radio" name="second" id="sencond_appoint">
                            指定</div>
                        <div class="imp secondList">
                            <input type="checkbox" value="0">00
                            <input type="checkbox" value="1">01
                            <input type="checkbox" value="2">02
                            <input type="checkbox" value="3">03
                            <input type="checkbox" value="4">04
                            <input type="checkbox" value="5">05
                            <input type="checkbox" value="6">06
                            <input type="checkbox" value="7">07
                            <input type="checkbox" value="8">08
                            <input type="checkbox" value="9">09</div>
                        <div class="imp secondList">
                            <input type="checkbox" value="10">10
                            <input type="checkbox" value="11">11
                            <input type="checkbox" value="12">12
                            <input type="checkbox" value="13">13
                            <input type="checkbox" value="14">14
                            <input type="checkbox" value="15">15
                            <input type="checkbox" value="16">16
                            <input type="checkbox" value="17">17
                            <input type="checkbox" value="18">18
                            <input type="checkbox" value="19">19</div>
                        <div class="imp secondList">
                            <input type="checkbox" value="20">20
                            <input type="checkbox" value="21">21
                            <input type="checkbox" value="22">22
                            <input type="checkbox" value="23">23
                            <input type="checkbox" value="24">24
                            <input type="checkbox" value="25">25
                            <input type="checkbox" value="26">26
                            <input type="checkbox" value="27">27
                            <input type="checkbox" value="28">28
                            <input type="checkbox" value="29">29</div>
                        <div class="imp secondList">
                            <input type="checkbox" value="30">30
                            <input type="checkbox" value="31">31
                            <input type="checkbox" value="32">32
                            <input type="checkbox" value="33">33
                            <input type="checkbox" value="34">34
                            <input type="checkbox" value="35">35
                            <input type="checkbox" value="36">36
                            <input type="checkbox" value="37">37
                            <input type="checkbox" value="38">38
                            <input type="checkbox" value="39">39</div>
                        <div class="imp secondList">
                            <input type="checkbox" value="40">40
                            <input type="checkbox" value="41">41
                            <input type="checkbox" value="42">42
                            <input type="checkbox" value="43">43
                            <input type="checkbox" value="44">44
                            <input type="checkbox" value="45">45
                            <input type="checkbox" value="46">46
                            <input type="checkbox" value="47">47
                            <input type="checkbox" value="48">48
                            <input type="checkbox" value="49">49</div>
                        <div class="imp secondList">
                            <input type="checkbox" value="50">50
                            <input type="checkbox" value="51">51
                            <input type="checkbox" value="52">52
                            <input type="checkbox" value="53">53
                            <input type="checkbox" value="54">54
                            <input type="checkbox" value="55">55
                            <input type="checkbox" value="56">56
                            <input type="checkbox" value="57">57
                            <input type="checkbox" value="58">58
                            <input type="checkbox" value="59">59
                        </div>
                    </div>
                    <div title="分钟">
                        <div class="line">
                            <input type="radio" checked="checked" name="min" onclick="everyTime(this)">
                            分钟 允许的通配符[, - * /]</div>
                        <div class="line">
                            <input type="radio" name="min" onclick="cycle(this)">
                            周期从
                            <input class="numberspinner" style="width: 60px;" data-options="min:1,max:58" value="1"
                                id="minStart_0">
                            -
                            <input class="numberspinner" style="width: 60px;" data-options="min:2,max:59" value="2"
                                id="minEnd_0">
                            分钟</div>
                        <div class="line">
                            <input type="radio" name="min" onclick="startOn(this)">
                            从
                            <input class="numberspinner" style="width: 60px;" data-options="min:0,max:59" value="0"
                                id="minStart_1">
                            分钟开始,每
                            <input class="numberspinner" style="width: 60px;" data-options="min:1,max:59" value="1"
                                id="minEnd_1">
                            分钟执行一次</div>
                        <div class="line">
                            <input type="radio" name="min" id="min_appoint">
                            指定</div>
                        <div class="imp minList">
                            <input type="checkbox" value="0">00
                            <input type="checkbox" value="1">01
                            <input type="checkbox" value="2">02
                            <input type="checkbox" value="3">03
                            <input type="checkbox" value="4">04
                            <input type="checkbox" value="5">05
                            <input type="checkbox" value="6">06
                            <input type="checkbox" value="7">07
                            <input type="checkbox" value="8">08
                            <input type="checkbox" value="9">09</div>
                        <div class="imp minList">
                            <input type="checkbox" value="10">10
                            <input type="checkbox" value="11">11
                            <input type="checkbox" value="12">12
                            <input type="checkbox" value="13">13
                            <input type="checkbox" value="14">14
                            <input type="checkbox" value="15">15
                            <input type="checkbox" value="16">16
                            <input type="checkbox" value="17">17
                            <input type="checkbox" value="18">18
                            <input type="checkbox" value="19">19</div>
                        <div class="imp minList">
                            <input type="checkbox" value="20">20
                            <input type="checkbox" value="21">21
                            <input type="checkbox" value="22">22
                            <input type="checkbox" value="23">23
                            <input type="checkbox" value="24">24
                            <input type="checkbox" value="25">25
                            <input type="checkbox" value="26">26
                            <input type="checkbox" value="27">27
                            <input type="checkbox" value="28">28
                            <input type="checkbox" value="29">29</div>
                        <div class="imp minList">
                            <input type="checkbox" value="30">30
                            <input type="checkbox" value="31">31
                            <input type="checkbox" value="32">32
                            <input type="checkbox" value="33">33
                            <input type="checkbox" value="34">34
                            <input type="checkbox" value="35">35
                            <input type="checkbox" value="36">36
                            <input type="checkbox" value="37">37
                            <input type="checkbox" value="38">38
                            <input type="checkbox" value="39">39</div>
                        <div class="imp minList">
                            <input type="checkbox" value="40">40
                            <input type="checkbox" value="41">41
                            <input type="checkbox" value="42">42
                            <input type="checkbox" value="43">43
                            <input type="checkbox" value="44">44
                            <input type="checkbox" value="45">45
                            <input type="checkbox" value="46">46
                            <input type="checkbox" value="47">47
                            <input type="checkbox" value="48">48
                            <input type="checkbox" value="49">49</div>
                        <div class="imp minList">
                            <input type="checkbox" value="50">50
                            <input type="checkbox" value="51">51
                            <input type="checkbox" value="52">52
                            <input type="checkbox" value="53">53
                            <input type="checkbox" value="54">54
                            <input type="checkbox" value="55">55
                            <input type="checkbox" value="56">56
                            <input type="checkbox" value="57">57
                            <input type="checkbox" value="58">58
                            <input type="checkbox" value="59">59
                        </div>
                    </div>
                    <div title="小时">
                        <div class="line">
                            <input type="radio" checked="checked" name="hour" onclick="everyTime(this)">
                            小时 允许的通配符[, - * /]</div>
                        <div class="line">
                            <input type="radio" name="hour" onclick="cycle(this)">
                            周期从
                            <input class="numberspinner" style="width: 60px;" data-options="min:0,max:23" value="0"
                                id="hourStart_0">
                            -
                            <input class="numberspinner" style="width: 60px;" data-options="min:2,max:23" value="2"
                                id="hourEnd_1">
                            小时</div>
                        <div class="line">
                            <input type="radio" name="hour" onclick="startOn(this)">
                            从
                            <input class="numberspinner" style="width: 60px;" data-options="min:0,max:23" value="0"
                                id="hourStart_1">
                            小时开始,每
                            <input class="numberspinner" style="width: 60px;" data-options="min:1,max:23" value="1"
                                id="hourEnd_1">
                            小时执行一次</div>
                        <div class="line">
                            <input type="radio" name="hour" id="hour_appoint">
                            指定</div>
                        <div class="imp hourList">
                            AM:
                            <input type="checkbox" value="0">00
                            <input type="checkbox" value="1">01
                            <input type="checkbox" value="2">02
                            <input type="checkbox" value="3">03
                            <input type="checkbox" value="4">04
                            <input type="checkbox" value="5">05
                            <input type="checkbox" value="6">06
                            <input type="checkbox" value="7">07
                            <input type="checkbox" value="8">08
                            <input type="checkbox" value="9">09
                            <input type="checkbox" value="10">10
                            <input type="checkbox" value="11">11
                        </div>
                        <div class="imp hourList">
                            PM:
                            <input type="checkbox" value="12">12
                            <input type="checkbox" value="13">13
                            <input type="checkbox" value="14">14
                            <input type="checkbox" value="15">15
                            <input type="checkbox" value="16">16
                            <input type="checkbox" value="17">17
                            <input type="checkbox" value="18">18
                            <input type="checkbox" value="19">19
                            <input type="checkbox" value="20">20
                            <input type="checkbox" value="21">21
                            <input type="checkbox" value="22">22
                            <input type="checkbox" value="23">23
                        </div>
                    </div>
                    <div title="日">
                        <div class="line">
                            <input type="radio" checked="checked" name="day" onclick="everyTime(this)">
                            日 允许的通配符[, - * / L W]</div>
                        <div class="line">
                            <input type="radio" name="day" onclick="unAppoint(this)">
                            不指定</div>
                        <div class="line">
                            <input type="radio" name="day" onclick="cycle(this)">
                            周期从
                            <input class="numberspinner" style="width: 60px;" data-options="min:1,max:31" value="1"
                                id="dayStart_0">
                            -
                            <input class="numberspinner" style="width: 60px;" data-options="min:2,max:31" value="2"
                                id="dayEnd_0">
                            日</div>
                        <div class="line">
                            <input type="radio" name="day" onclick="startOn(this)">
                            从
                            <input class="numberspinner" style="width: 60px;" data-options="min:1,max:31" value="1"
                                id="dayStart_1">
                            日开始,每
                            <input class="numberspinner" style="width: 60px;" data-options="min:1,max:31" value="1"
                                id="dayEnd_1">
                            天执行一次</div>
                        <div class="line">
                            <input type="radio" name="day" onclick="workDay(this)">
                            每月
                            <input class="numberspinner" style="width: 60px;" data-options="min:1,max:31" value="1"
                                id="dayStart_2">
                            号最近的那个工作日</div>
                        <div class="line">
                            <input type="radio" name="day" onclick="lastDay(this)">
                            本月最后一天</div>
                        <div class="line">
                            <input type="radio" name="day" id="day_appoint">
                            指定</div>
                        <div class="imp dayList">
                            <input type="checkbox" value="1">1
                            <input type="checkbox" value="2">2
                            <input type="checkbox" value="3">3
                            <input type="checkbox" value="4">4
                            <input type="checkbox" value="5">5
                            <input type="checkbox" value="6">6
                            <input type="checkbox" value="7">7
                            <input type="checkbox" value="8">8
                            <input type="checkbox" value="9">9
                            <input type="checkbox" value="10">10
                            <input type="checkbox" value="11">11
                            <input type="checkbox" value="12">12
                            <input type="checkbox" value="13">13
                            <input type="checkbox" value="14">14
                            <input type="checkbox" value="15">15
                            <input type="checkbox" value="16">16
                        </div>
                        <div class="imp dayList">
                            <input type="checkbox" value="17">17
                            <input type="checkbox" value="18">18
                            <input type="checkbox" value="19">19
                            <input type="checkbox" value="20">20
                            <input type="checkbox" value="21">21
                            <input type="checkbox" value="22">22
                            <input type="checkbox" value="23">23
                            <input type="checkbox" value="24">24
                            <input type="checkbox" value="25">25
                            <input type="checkbox" value="26">26
                            <input type="checkbox" value="27">27
                            <input type="checkbox" value="28">28
                            <input type="checkbox" value="29">29
                            <input type="checkbox" value="30">30
                            <input type="checkbox" value="31">31
                        </div>
                    </div>
                    <div title="月">
                        <div class="line">
                            <input type="radio" checked="checked" name="mouth" onclick="everyTime(this)">
                            月 允许的通配符[, - * /]</div>
                        <div class="line">
                            <input type="radio" name="mouth" onclick="unAppoint(this)">
                            不指定</div>
                        <div class="line">
                            <input type="radio" name="mouth" onclick="cycle(this)">
                            周期从
                            <input class="numberspinner" style="width: 60px;" data-options="min:1,max:12" value="1"
                                id="mouthStart_0">
                            -
                            <input class="numberspinner" style="width: 60px;" data-options="min:2,max:12" value="2"
                                id="mouthEnd_0">
                            月</div>
                        <div class="line">
                            <input type="radio" name="mouth" onclick="startOn(this)">
                            从
                            <input class="numberspinner" style="width: 60px;" data-options="min:1,max:12" value="1"
                                id="mouthStart_1">
                            月开始,每
                            <input class="numberspinner" style="width: 60px;" data-options="min:1,max:12" value="1"
                                id="mouthEnd_1">
                            月执行一次</div>
                        <div class="line">
                            <input type="radio" name="mouth" id="mouth_appoint">
                            指定</div>
                        <div class="imp mouthList">
                            <input type="checkbox" value="1">1
                            <input type="checkbox" value="2">2
                            <input type="checkbox" value="3">3
                            <input type="checkbox" value="4">4
                            <input type="checkbox" value="5">5
                            <input type="checkbox" value="6">6
                            <input type="checkbox" value="7">7
                            <input type="checkbox" value="8">8
                            <input type="checkbox" value="9">9
                            <input type="checkbox" value="10">10
                            <input type="checkbox" value="11">11
                            <input type="checkbox" value="12">12
                        </div>
                    </div>
                    <div title="周">
                        <div class="line">
                            <input type="radio" checked="checked" name="week" onclick="everyTime(this)">
                            周 允许的通配符[, - * / L #]</div>
                        <div class="line">
                            <input type="radio" name="week" onclick="unAppoint(this)">
                            不指定</div>
                        <div class="line">
                            <input type="radio" name="week" onclick="startOn(this)">
                            周期 从星期<input class="numberspinner" style="width: 60px;" data-options="min:1,max:7"
                                id="weekStart_0" value="1">
                            -
                            <input class="numberspinner" style="width: 60px;" data-options="min:2,max:7" value="2"
                                id="weekEnd_0"></div>
                        <div class="line">
                            <input type="radio" name="week" onclick="weekOfDay(this)">
                            第<input class="numberspinner" style="width: 60px;" data-options="min:1,max:4" value="1"
                                id="weekStart_1">
                            周 的星期<input class="numberspinner" style="width: 60px;" data-options="min:1,max:7"
                                id="weekEnd_1" value="1"></div>
                        <div class="line">
                            <input type="radio" name="week" onclick="lastWeek(this)">
                            本月最后一个星期<input class="numberspinner" style="width: 60px;" data-options="min:1,max:7"
                                id="weekStart_2" value="1"></div>
                        <div class="line">
                            <input type="radio" name="week" id="week_appoint">
                            指定</div>
                        <div class="imp weekList">
                            <input type="checkbox" value="1">1
                            <input type="checkbox" value="2">2
                            <input type="checkbox" value="3">3
                            <input type="checkbox" value="4">4
                            <input type="checkbox" value="5">5
                            <input type="checkbox" value="6">6
                            <input type="checkbox" value="7">7
                        </div>
                    </div>
                    <div title="年">
                        <div class="line">
                            <input type="radio" checked="checked" name="year" onclick="unAppoint(this)">
                            不指定 允许的通配符[, - * /] 非必填</div>
                        <div class="line">
                            <input type="radio" name="year" onclick="everyTime(this)">
                            每年</div>
                        <div class="line">
                            <input type="radio" name="year" onclick="cycle(this)">周期 从
                            <input class="numberspinner" style="width: 90px;" data-options="min:2013,max:3000"
                                id="yearStart_0" value="2013">
                            -
                            <input class="numberspinner" style="width: 90px;" data-options="min:2014,max:3000"
                                id="yearEnd_0" value="2014"></div>
                    </div>
				</div>
				<div style="height:120px">
						<table style="height: 100px;">
								<tbody>
									<tr>
										<td></td>
										<td align="center">秒</td>
										<td align="center">分钟</td>
										<td align="center">小时</td>
										<td align="center">日</td>
										<td align="center">月<br />
										</td>
										<td align="center">
											星期
										</td>
										<td align="center">
											年
										</td>
									</tr>
									<tr>
										<td>
											表达式字段:
										</td>
										<td>
											<input type="text" name="v_second" value="*" size="2" readonly="readonly" />
										</td>
										<td>
											<input type="text" name="v_min" value="*" size="2" readonly="readonly" />
										</td>
										<td>
											<input type="text" name="v_hour" value="*" size="2" readonly="readonly" />
										</td>
										<td>
											<input type="text" name="v_day" value="*" size="2" readonly="readonly" />
										</td>
										<td>
											<input type="text" name="v_mouth" value="*" size="2" readonly="readonly" />
										</td>
										<td>
											<input type="text" name="v_week" value="?" size="2" readonly="readonly" />
										</td>
										<td>
											<input type="text" name="v_year" size="2" readonly="readonly" />
										</td>
									</tr>
									 <tr>
										<td>Cron 表达式:</td>
										<td colspan="6"><input type="text" id="cron" name="cron" style="width: 100%;" value="* * * * * ?" id="cron" /></td>
										<td>&nbsp;&nbsp;<input type="button" value="确定 " id="btnFill" class="btn btn-default" onclick="fillCron()"/></td>
									</tr>
								</tbody>
							</table>
					</div>
          	</div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" onclick="closeCron()">关闭</button>
            </div>
        </div>
	</div>
</div>

<div id="time-modal" class="modal fade in" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">生成时间表达式</h4>
            </div>
            <div class="modal-body">
                <div>
                    <p>
                        设置开始时间：
                        <select id="start_time" onchange="showTimeSpinner()">
                            <option name="no_start_time" value="0">从当前开始</option>
                            <option name="user_time" value="1" selected="true">自定义开始时间</option>
                        </select>
                    </p>
                    <div style="margin:20px 0;"></div>
                    <div id="start_spinner_div">
                        <input id="start_spinner" class="easyui-datetimebox" value="1/1/2015 1:1:00" style="width:200px;"></input>
                    </div>
                </div>
                <br>
                时间间隔：&nbsp;每隔
                <select id="time_interval">
                    <option value="1">1</option>
                    <option value="2">2</option>
                    <option value="3">3</option>
                    <option value="4">4</option>
                    <option value="5">5</option>
                    <option value="6">6</option>
                    <option value="7">7</option>
                    <option value="8">8</option>
                    <option value="9">9</option>
                    <option value="10">10</option>
                    <option value="11">11</option>
                    <option value="12">12</option>
                </select>
                <select id="time_unit"  onchange="changeTimeInterval()">
                    <option name="yue" value="1" selected="true">月</option>
                    <option name="tian" value="2">天</option>
                    <option name="xiaoshi" value="3">小时</option>
                    <option name="fenzhong" value="4">分钟</option>
                    <option name="miao" value="5">秒</option>
                </select>
                执行一次
                <br><br><br>
                如果以上配置还不能满足你的需求，请使用高级配置：
                <input id="cron_time" class="btn btn-info" value="quarz表达式配置" onclick="cronShow()"/>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="closeTime()">关闭</button>
                <button type="button" class="btn btn-primary" onclick="parseQuarz()" data-dismiss="modal">确定</button>
            </div>
        </div>
    </div>
</div>

<div id="job-modal" class="modal fade in" role="dialog">
	<div class="modal-dialog">
        <div class="modal-content">
    		<div class="modal-header">
    			<a class="close" data-dismiss="modal">×</a>
    			<h4 id="title-modal" class="modal-title"></h4>
            </div>
            <div class="modal-body">
				<input type="hidden" id="groupModalId" />
				<input type="hidden" id="jobActionType" />
				<input type="hidden" id="updateJobId" />
                
				<table width="100%">
					<tr >
						<td align="left">Job处理接口:</td>
						<td align="right"><input id="jobProcessor" type="text" size="76" placeholder="&nbsp;填写Job处理接口实现类的全类名（完整包路径加类名）"/></td>
                    </tr>
                </table>
                <br>
                <table width="100%">
					<tr >
						<td >
            				<select id="timing" name="timing" onchange="changeExpShow(this)">
            					<option value="1" selected = "selected">定时触发</option>
            					<option value="0">API 触发</option>
                            </select>
                        </td>
						<td >
							<select id="parallel" name="parallel" onchange="showJobTips()">
            					<option value="0" selected = "selected">简单Job单机版</option>
            					<option value="2" >并行计算Job</option>
								<option value="4" >简单Job多机版</option>
                            </select>
                        </td>
						<td >
							<input type="checkbox" id="firePolicy" name="firePolicy">Job还在执行中，到了下次触发时间点Job照常触发执行</input>
                        </td>
                    </tr>
                </table>
                <br>
				<table width="100%">
					<tr >
						<td >
							<font id="job_tips" style="color:green;"></font>
                        </td>
						<td width="200" align="right">业务分类：
            				<select id="jobLevel">
            					<option value="0">---请选择---</option>
            					<option value="1">金融</option>
                            </select>
                        </td>
                    </tr>
                </table>
				
                <div id="expContent">
                    <br>
					<table>
						<tr >
							<td ><span>定时表达式:&nbsp;</span></td>
							<td ><input id="cronExp" type="text" placeholder="&nbsp;quartz时间表达式" size="60"/></td>
							<td >&nbsp;&nbsp;<button id="cronGen" data-toggle="modal" class="btn btn-info btn-sm" onclick="cronExpShow()">使用工具生成</button></td>
                        </tr>
                    </table>
                </div>
            	<br>
            	<span>Job描述:</span>
            	<br>
            	<textarea  id="jobDesc"  rows="4" cols="89"></textarea><br><br>
				<span>自定义Job参数:</span><br>
                <textarea id="jobArguments" rows="4" cols="89" placeholder="&nbsp;注意！没有自定义Job参数可以忽略 。这里就是一个字符串没有任何格式，当然你可以自己定义格式比如json字符串. 在代码里可以这样获取到这个参数：String args = context.getJob().getJobArguments()"></textarea><br>

          	</div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" onclick="closeJobModal()">关闭</button>
                <button id="jobOk" type="button" class="btn btn-primary" onclick="jobOprate()">确定</button>
            </div>
        </div>
	</div>
</div>

<div id="machines-modal" class="modal fade in" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
##                <a class="close" data-dismiss="modal">×</a>
                <h4 class="modal-title">指定运行机器</h4>
            </div>
            <div class="modal-body">
                <font style="color:red;">提示：在需要运行Job的机器上勾选</font><br><br>
                <input type="hidden" id="machines-count"></input>
                <input type="hidden" id="designatedJobId"></input>
                <input type="hidden" id="designatedGroupId"></input>
                <div id="machines">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" onclick="closeDM()">关闭</button>
                <button type="button" class="btn btn-primary" onclick="updateDesignatedMachine()">确定</button>
            </div>
        </div>
    </div>
</div>

<script language="javascript">


	function showJobTips() {
	
		var tips = document.getElementById("job_tips");
		var parallel = document.getElementById("parallel")
	
		if(parallel.value == 0) {
			tips.innerHTML = '重要提示：简单Job单机版 -> 每次随机选一台机器触发执行';
		} else if(parallel.value == 4) {
			tips.innerHTML = '重要提示：简单Job多机版 -> 每次所有机器同时触发执行';
		} else if(parallel.value == 2) {
			tips.innerHTML = '重要提示：并行计算Job -> 子任务分发到多台机器并行执行';
		}
	}

    function firstGroupShow() {
        var defaultGroup = $("#defaultGroup").val();
        if(defaultGroup != "") {
            showGroupJobs(defaultGroup);
        }
    }

    function closeDM(){
        $("#machines-modal").hide();
    }

    window.onload = firstGroupShow;

    function cronExpShow() {
        $("#job-modal").modal("hide");
        $("#time-modal").modal("show");
        $('#start_spinner').datetimebox('setValue', '9999');
    }

	function cronShow() {
        $("#time-modal").modal("hide");
		$("#job-modal").modal("hide")
        $("#cron-modal").modal('show');
	}
	
	function closeCron() {
		$("#cron-modal").modal("hide");
		$("#time-modal").modal("show");
	}

    function closeTime() {
        $("#time-modal").modal("hide");
        $("#job-modal").modal("show");
    }

    function closeJobModal() {
        $("#job-modal").modal("hide");
    }
	
	function fillCron() {
        var cron = $("#cron").val();
		$("#cronExp").val(cron);
        $("#time-modal").modal("hide");
        $("#cron-modal").modal("hide");
        $("#job-modal").modal("show");
	}

    function showTimeSpinner() {
        var selectVar = $("#start_time").find("option:selected").val();
        if(selectVar == 1) {
            $("#start_spinner_div").show();
            $('#start_spinner').datetimebox('setValue', '9999');
        } else {
            $("#start_spinner_div").hide();
        }
    }

    function changeTimeInterval() {
        var time_unit = $("#time_unit").find("option:selected").val();
        $("#time_interval").empty();
        if(time_unit == 1) {// 月
            for(i = 1; i <= 12; i++) {
                $("#time_interval").append("<option value='" + i + "'>" + i + "</option>");
            }
        } else if(time_unit == 2) {// 日
            for(i = 1; i <= 31; i++) {
                $("#time_interval").append("<option value='" + i + "'>" + i + "</option>");
            }
        } else if(time_unit == 3) {// 时
            for(i = 1; i <= 23; i++) {
                $("#time_interval").append("<option value='" + i + "'>" + i + "</option>");
            }
        } else if(time_unit == 4) {// 分钟
            for(i = 1; i <= 59; i++) {
                $("#time_interval").append("<option value='" + i + "'>" + i + "</option>");
            }
        } else if(time_unit == 5) {// 秒
            var isAliyunUser = $("#outerUser").val();
            if(isAliyunUser == true) {
                for(i = 5; i <= 59; i++) {
                    $("#time_interval").append("<option value='" + i + "'>" + i + "</option>");
                }
            } else {
                for(i = 1; i <= 59; i++) {
                    $("#time_interval").append("<option value='" + i + "'>" + i + "</option>");
                }
            }
        }
    }
    // 将页面元素转化成quarz表达式;
    function parseQuarz() {
        // 先获取时间间隔的单位
        var time_unit = $("#time_unit").find("option:selected").val();
        // 根据所选的单位校验并转化;
        var interval = $("#time_interval").find("option:selected").val();
        interval = parseInt(interval);
        var cron_exp = "0 0 0 1 1 ? ";
        var today = new Date();
        var selectVar = $("#start_time").find("option:selected").val();
        var value = $("#start_spinner").datetimespinner('getValue');
        if(time_unit == 1) {// 月
            var time_exp = "";
            if(selectVar == 1) {
                time_exp += getTimeUnitValue(value, 5) + " ";
                time_exp += getTimeUnitValue(value, 4) + " ";
                time_exp += getTimeUnitValue(value, 3) + " ";
                time_exp += getTimeUnitValue(value, 2) + " ";
            } else {
                time_exp += today.getSeconds() + " ";
                time_exp += today.getMinutes() + " ";
                time_exp += today.getHours() + " ";
                time_exp += today.getDate() + " ";
            }

            time_exp += ("1" + "/" + interval + " ");
            time_exp += "?";
            cron_exp = time_exp;
        } else if(time_unit == 2) {// 天
            var time_exp = "";
            if(selectVar == 1) {
                time_exp += getTimeUnitValue(value, 5) + " ";
                time_exp += getTimeUnitValue(value, 4) + " ";
                time_exp += getTimeUnitValue(value, 3) + " ";
            } else {
                time_exp += today.getSeconds() + " ";
                time_exp += today.getMinutes() + " ";
                time_exp += today.getHours() + " ";
            }

            time_exp += ("1" + "/" + interval + " ");
            time_exp += "* ?";
            cron_exp = time_exp;
        } else if(time_unit == 3) {// 小时
            var time_exp = "";
            if(selectVar == 1) {
                time_exp += getTimeUnitValue(value, 5) + " ";
                time_exp += getTimeUnitValue(value, 4) + " ";
            } else {
                time_exp += today.getSeconds() + " ";
                time_exp += today.getMinutes() + " ";
            }

            time_exp += ("0" + "/" + interval + " ");
            time_exp += "* * ?";
            cron_exp = time_exp;
        } else if(time_unit == 4) {// 分钟
            var time_exp = "";
            if(selectVar == 1) {
                time_exp += getTimeUnitValue(value, 5) + " ";
            } else {
                time_exp += today.getSeconds() + " ";
            }

            time_exp += ("0" + "/" + interval + " ");
            time_exp += "* * * ?";
            cron_exp = time_exp;
        } else if(time_unit == 5) {// 秒
            var time_exp = "";
            time_exp += ("0" + "/" + interval + " ");
            time_exp += "* * * * ?";
            cron_exp = time_exp;
        }
        // 转化完转化fill;
        $("#cronExp").val(cron_exp);
        $("#time-modal").modal("hide");
        $("#job-modal").modal("show");
    }

    // 限制用户的输入范围
    function limitTimeExpression(cron_exp) {

    }


    // 在失去焦点时校验
    function blurCheck() {
        var today = new Date();
        var time_unit = $("#time_unit").find("option:selected").val();
        var interval = $("#time_interval").val();
        if(!checkInt(interval)) {
            // 不合法输入直接变成最小值;
            $("#time_interval").val(1);
            return;
        }

        if(time_unit == 0) {// 年
            if(interval > 84) {
                $("#time_interval").val(84);
            }
        } else if(time_unit == 1) {// 月
            if(interval < 1) {
                $("#time_interval").val(1);
            } else if(interval > 12) {
                $("#time_interval").val(12);
            }
        } else if(time_unit == 2) {// 天

            if(interval < 1) {
                $("#time_interval").val(1);
            } else if(interval > 30){
                $("#time_interval").val(31);
            }
        } else if(time_unit == 3) {// 小时

            if(interval < 1) {
                $("#time_interval").val(1);
            } else if(interval >= 24) {
                $("#time_interval").val(23);
            }
        } else if(time_unit == 4) {// 分钟

            if(interval < 1) {
                $("#time_interval").val(1);
            } else if(interval >= 60){
                $("#time_interval").val(59);
            }
        } else if(time_unit == 5) {// 秒

            if(interval < 1) {
                $("#time_interval").val(1);
            } else if(interval >= 60){
                $("#time_interval").val(59);
            }
        }
    }


    //判断正整数
    function checkInt(input) {
         var re = new RegExp("^[0-9]*[1-9][0-9]*$");
         if (!re.test(input)) {
             return false;
         } else {
             return true;
         }
    }

    function getTimeUnitValue(value, type) {
        var arr = value.split(" ");
        var date = arr[0].split("/");
        var time = arr[1].split(":");
        if(type == 0) {// 年
            return parseInt(date[2]);
        } else if(type == 1) {// 月
            return parseInt(date[0]);
        } else if(type == 2) {// 日
            return parseInt(date[1]);
        } else if(type == 3) {// 小时
            return parseInt(time[0]);
        } else if(type == 4) {// 分钟
            return parseInt(time[1]);
        } else if(type == 5) {// 秒
            return 0;
        }
    }

    function showGroupModal() {
        $("#group_error_msg").text("");
        $("#group-modal").modal("show");
    }

    function createGroup(){
        var desc = $('#groupDesc').val();
        desc = trim(desc);
        if(desc == "" || desc == null) {
            $.toast({
                text : "分组描述不能为空！",
                position : 'top-right',
                bgColor : 'red',
                textColor : '#eee',
            });
        } else {
            // 提交到服务端;
            var path = "jobManager.do?action=JobManageAction&event_submit_do_create_group=1";
            jQuery.ajax({
                url: path,
                type: "POST",
                dataType:'json',
                data:{
                    'clusterId':$("#clusterId").val(),
                    'groupDesc': $('#groupDesc').val()
                }
                ,
                success:function(json){
                    if(json.success == true) {
                        location.href = "jobManager.htm?clusterId=" + $("#clusterId").val();
                    } else {
                        $.toast({
                            text : "创建失败!原因:" + json.errMsg,
                            position : 'top-right',
                            hideAfter : false
                        });
                    }
                }
                ,
                error:function(xhr, status, error){
                    $.toast({
                        text : "创建失败!",
                        position : 'top-right'
                    });
                }
            });
            $("#group-modal").modal("hide");
        }
	}

	function showGroupCluster(clusterId){
		var path = "jobManager.htm?clusterId=" + clusterId;
		location.href = path;
	}
	
	function changeExpShow(obj){
		
		if(obj.value == 0){
            $("#expContent").hide();
		}
		else{
            $("#expContent").show();
		}
	}
	
	function showJobModal(groupId) {
	
		var createJobFlow = $('#createJobFlow_' + groupId).val();
		if('true' == createJobFlow) {
		
			var path = "jobManager.do?action=JobManageAction&event_submit_do_start_flow=1";
			jQuery.ajax({
                url: path,
                type: "POST",
                dataType:'json',
                data:{
                    'operationObjectId':groupId,
					'processCode':'createJobFlow',
					'title':'【DTS】申请创建Job',
					'key':'label_1445914237083',
					'value':'申请创建Job'
                }
                ,
                success:function(json){
                    if(json.success == true) {
						if('agree' == json.msg) {
							showJobModalComp(groupId);
						} else {
                        	alert(json.msg);
						}
                    } else {
                        $.toast({
                            text : "创建失败!原因:" + json.errMsg,
                            position : 'top-right',
                            hideAfter : false
                        });
                    }
                }
                ,
                error:function(xhr, status, error){
                    $.toast({
                        text : "创建审批流程失败!",
                        position : 'top-right'
                    });
                }
            });
			
		} else {
			showJobModalComp(groupId);
		}
	
	}
	
	function showJobModalComp(groupId) {
	
		$("#groupModalId").val(groupId);
        $("[name = firePolicy]:checkbox").attr("checked", false);
		$("#jobActionType").val(0);
		$("#cronExp").val("");
		$("#jobProcessor").val("");
        $("#jobArguments").val("");
		$("#jobDesc").val("");
		$("#cronGen").show();
		$("#title-modal").text("Job创建");
		$("#jobLevel").val(0);
		$("#expContent").show();
		$("#timing").val(1);
		$("#parallel").val(0);
		showJobTips();
		$("#jobOk").show();
		$("#job-modal").modal();
	}
	
	function jobOprate(){
        // 校验用户输入;
        var processor = $('#jobProcessor').val();
        if(processor == null || processor == '') {
            $.toast({
                text : "处理接口不能为空！",
                position : 'top-right',
                bgColor : 'red',
                textColor : '#eee',
            });
            return;
        }
		
		var jobLevel = $("#jobLevel").val();
		if(0 == jobLevel) {
			alert("请选择业务分类！");
			return ;
		}
		
        processor = trim(processor);
        if(processor == "") {
            $.toast({
                text : "处理接口输入为无意义的字符！",
                position : 'top-right',
                bgColor : 'red',
                textColor : '#eee',
            });
            return;
        }

        var jobType = $('#timing').val();
        if(jobType == 1) {
            var exp = $('#cronExp').val();
            if(exp == null || exp == '') {
                $.toast({
                    text : "时间表达式不能为空！",
                    position : 'top-right',
                    bgColor : 'red',
                    textColor : '#eee',
                });
                return;
            }
            exp = trim(exp);
            if(exp == "") {
                $.toast({
                    text : "时间表达式输入为无意义的字符！",
                    position : 'top-right',
                    bgColor : 'red',
                    textColor : '#eee',
                });
                return;
            }

        }

        var desc = $('#jobDesc').val();
        if(desc == null || desc == '') {
            $.toast({
                text : "Job描述不能为空！",
                position : 'top-right',
                bgColor : 'red',
                textColor : '#eee',
            });
            return;
        }
        desc = trim(desc);
        if(desc == "") {
            $.toast({
                text : "Job描述输入为无意义的字符！",
                position : 'top-right',
                bgColor : 'red',
                textColor : '#eee',
            });
            return;
        }

        var parallelchecked = document.getElementById("parallel").value;
        jobType = parseInt(jobType) + parseInt(parallelchecked);
		 
        var firePolicy = 0;
        var firePolicyChecked = document.getElementById("firePolicy").checked;
        if(firePolicyChecked == true) {
            firePolicy = 1;
        }

		// 创建
		if($("#jobActionType").val() == 0) {
			// 提交到服务端;
    		var path = "jobManager.do?action=JobManageAction&event_submit_do_create_job=1";
    		jQuery.ajax({
    			url: path,
    			type: "POST",
    			dataType:'json',
    			data:{
    				'serverClusterId':$("#clusterId").val(), 'groupId':$("#groupModalId").val(),'cronExpression':$('#cronExp').val(),
    				'jobDesc':$('#jobDesc').val(),'jobType':jobType,
    				'jobProcessor':$('#jobProcessor').val(),'firePolicy':firePolicy,
                    'clusterName':$('#clusterName').val(),
                    'jobArguments':$('#jobArguments').val(),
					'jobLevel':jobLevel
    			}
    			,
    			success:function(json){
    				if(json.success == true){
                        $("#job-modal").modal("hide");
                        $.toast({
                            text : "创建成功！",
                            position : 'top-right',
                            bgColor : 'green',
                            textColor : '#eee',
                        });
                        $("#label_" + $("#groupModalId").val()).html(parseInt($("#label_" + $("#groupModalId").val()).html()) + 1);
                        $("#group_" + $("#groupModalId").val()).hide();
                        showGroupJobs($("#groupModalId").val());

    				}else{
                        if(json.invalid == true) {
                            //alert("时间表达式不正确!");
                            //$("#job-modal").modal("show");
                            $.toast({
                                text : "时间表达式不正确!",
                                position : 'top-right',
                                bgColor : 'red',
                                textColor : '#eee',
                            });
                        } else {
                            $("#job-modal").modal("hide");
                            $.toast({
                                text : "创建Job失败!原因:" + json.errMsg,
                                position : 'top-right',
                                bgColor : 'red',
                                textColor : '#eee',
                                hideAfter : false
                            });
                        }
    				}
    			}
    			,
    			error:function(xhr, status, error){
//                    $("#job-modal").modal("hide");
                    $.toast({
                        text : "请求失败，无法创建Job！",
                        position : 'top-right',
                        bgColor : 'red',
                        textColor : '#eee',
                    });
    			}
    		});

		} else if($("#jobActionType").val() == 1) {	// 修改
			// 提交到服务端;
			var path = "jobManager.do?action=JobManageAction&event_submit_do_update_job=1";
			jQuery.ajax({
				url: path,
				type: "POST",
				dataType:'json',
				data:{
					'serverClusterId':$("#clusterId").val(), 'groupId':$("#groupModalId").val(),'cronExpression':$('#cronExp').val(),
					'jobDesc':$('#jobDesc').val(),'jobType':jobType,
					'jobProcessor':$('#jobProcessor').val(),'firePolicy':firePolicy,
					'jobId':$('#updateJobId').val(),
                    'jobArguments':$('#jobArguments').val(),
					'jobLevel':jobLevel
				}
				,
				success:function(json){
					if(json.success == true){
                        $.toast({
                            text : "更新成功！",
                            position : 'top-right',
                            bgColor : 'green',
                            textColor : '#eee',
                        });
                        $("#job-modal").modal("hide");
                        var groupModalId = $('#groupModalId').val();
                        initGroupJobsData($('#jobPagination_' + groupModalId).pageNumber, groupModalId, $('#jobPagination_' + groupModalId).pageSize);
//                        $("#group_" + $('#groupModalId').val()).hide();
//                        showGroupJobs($('#groupModalId').val());
					}
					else{
                        if(json.invalid == true) {
                            //alert("时间表达式不正确!");
                            $.toast({
                                text : "时间表达式不正确!",
                                position : 'top-right',
                                bgColor : 'red',
                                textColor : '#eee',
                            });
                        } else {
                            $.toast({
                                text : "更新失败!" + json.errMsg,
                                position : 'top-right',
                                bgColor : 'red',
                                textColor : '#eee',
                                hideAfter : false
                            });
                        }
					}
				}
				,
				error:function(xhr, status, error){
                    $.toast({
                        text : "请求失败，无法更新！",
                        position : 'top-right',
                        bgColor : 'red',
                        textColor : '#eee',
                    });
				}
			}
			);
		}
	}
	
	function showGroupJobs(groupId){
		
		if($("#group_" + groupId).is(':hidden') == true){

			loadGroupJobsData(groupId);
			
            $("#reginId_all_btn_" + groupId).html("收起Job列表");
		}else{
			$("#group_" + groupId).hide();
            $("#reginId_all_btn_" + groupId).html("查看Job列表");
		}
	}
	
	function loadGroupJobsData(groupId) {
	
		var searchText = $("#search-text-id-" + groupId).val();
		
		var pageCount = 0;
		var path = "jobManager.do?action=JobManageAction&event_submit_do_get_group_jobs_count=1";
		jQuery.ajax({
			url: path,
			type: "POST",
			dataType:'json',
			data:{'groupId': groupId, 'searchText':searchText},
			success:function(json){
				if(json.success == true){
					pageCount = json.pageCount;
					var jt = "";
					jt += "<div><table id='table_" + groupId + "' class='table table-bordered'><tr><td align='center' width='100'>Job ID</td><td>Job描述</td><td align='center' width='300'>Job关键信息</td><td align='center' width='250'>操作</td></tr>"
					jt += "</table>";
					jt += "<div id='jobPagination_" + groupId + "' class='easyui-pagination pull-right'></div></div>";
					$("#group_" + groupId).html(jt);
					// 绑定分页
					$("#jobPagination_" + groupId).pagination({
						total:pageCount,
						pageSize:10,
						pageList:[5,10,20],
						displayMsg:"",
						beforePageText:"页",
						afterPageText:"共{pages}",
						onSelectPage:function(pageNumber, pageSize){groupPagesCallback(groupId, pageNumber, pageSize);},
                        onRefresh:function(pageNumber, pageSize){groupPagesCallback(groupId, pageNumber, pageSize);},
					});
					initGroupJobsData(1, groupId, 10);
				}else{
                    $.toast({
                        text : "获取失败!" + json.errMsg,
                        position : 'top-right',
                        bgColor : 'red',
                        textColor : '#eee',
                        hideAfter : false
                    });
				}
			}
			,
			error:function(xhr, status, error){
                $.toast({
                    text : "请求异常!",
                    position : 'top-right',
                    bgColor : 'red',
                    textColor : '#eee',
                });
			}
		}
		);
	
	}
	
	function groupPagesCallback(groupId, pageId, pageSize){
		initGroupJobsData(pageId, groupId, pageSize);
	}
	
	function initGroupJobsData(pageId, groupId, pageSize){
	
		var searchText = $("#search-text-id-" + groupId).val();
	
		// 请求数据，刷新job表格;
		var path = "jobManager.do?action=JobManageAction&event_submit_do_get_group_jobs=1";
		jQuery.ajax({
			url: path,
			type: "POST",
			dataType:'json',
			data:{'groupId': groupId, 'page':pageId, 'clusterId':$("#clusterId").val(), 'pageSize':pageSize, 'searchText':searchText}
			,
			success:function(json){
				if(json.success == true){
					jobsArray = json.groupJobs;
					var tbody = "";
					$("#table_" + groupId + " tr:gt(0)").remove();

                    if(jobsArray.length ==0) {

                    } else {
                        for(i = 0; i < jobsArray.length; i++){
                            jobJson = jobsArray[i];
                            var jt = "";
                            jt += "<tr><td align='center' width='100'>" + jobJson.jobId + "</td>";
                            jt += "<td>" + jobJson.jobDesc + "</td>";
							
							if(jobJson.jobType == 0) {
                                 jt += "<td align='center' width='300'>API 触发，  简单Job单机版</td>";
							} else if(jobJson.jobType == 1) {
								jt += "<td align='center' width='300'>定时触发[ " + jobJson.cronExpression + " ]，  简单Job单机版</td>";
							} else if(jobJson.jobType == 2) {
								jt += "<td align='center' width='300'>API 触发，  并行计算Job</td>";
							} else if(jobJson.jobType == 3) {
								jt += "<td align='center' width='300'>定时触发[ " + jobJson.cronExpression + " ]，  并行计算Job</td>";
							} else if(jobJson.jobType == 4) {
								jt += "<td align='center' width='300'>API 触发，  简单Job多机版</td>";
							} else if(jobJson.jobType == 5) {
								jt += "<td align='center' width='300'>定时触发[ " + jobJson.cronExpression + " ]，  简单Job多机版</td>";
							}
							
                            var status = "";
                            if(jobJson.status == 0) {
                                status = "启用";
                            } else {
                                status = "停用";
                            }
                            jt += "<td align='center' width='250'><a onclick='jobInfo("
									+ jobJson.jobId +")' >详情</a>&nbsp;&nbsp;&nbsp;<a onclick='deleteJob("+ jobJson.jobId + ",this,&quot;" + groupId + "&quot;)'>删除</a>&nbsp;&nbsp;&nbsp;<a onclick='updateJob("
                                    + jobJson.jobId +",&quot;" + groupId + "&quot;)' >修改</a>&nbsp;&nbsp;&nbsp;<a  onclick='enableJob("
                                    + jobJson.jobId + ",this,&quot;" + status + "&quot;)'>" + status + "</a>&nbsp;&nbsp;&nbsp;<a onclick='showDesignatedMachine("
                                    + jobJson.jobId + ",&quot;" + groupId + "&quot;)'>" + "指定机器" + "</a></td></tr>";

                            tbody += jt;
                        }
                    }
					$("#table_" + groupId).append(tbody);
                    $("#group_" + groupId).show();
				}
				else{
                    $.toast({
                        text : "获取失败!" + json.errMsg,
                        position : 'top-right',
                        bgColor : 'red',
                        textColor : '#eee',
                        hideAfter : false
                    });
				}
			}
			,
			error:function(xhr, status, error){
                $.toast({
                    text : "获取失败!",
                    position : 'top-right',
                    bgColor : 'red',
                    textColor : '#eee',
                });
			}
		});
	}

    function showDesignatedMachine(jobId, groupId) {
        var path = "jobManager.do?action=JobManageAction&event_submit_do_show_designated_machine=1";
        jQuery.ajax({
            url: path,
            type: "POST",
            dataType:'json',
            data:{'jobId': jobId, 'groupId':groupId},
            success:function(json){
                if(json.success == true){
                    var content = "";
                    jsonArray = json.data;
                    if(jsonArray.length > 0) {
                        if(json.policy == 0) {
                            content += "<input id='designatedPolicy' type='checkbox' checked='true'>" + "指定机器不可用自动转移到其他可用机器运行" + "</input>";
                        } else {
                            content += "<input id='designatedPolicy' type='checkbox'>" + "指定机器不可用自动转移到其他可用机器运行" + "</input>";
                        }
                        content += "<br>";
                    }
                    for(i = 0; i < jsonArray.length; i++) {
                        designatedMachine = jsonArray[i];
                        if(designatedMachine.check == "true") {
                            content += "<input type='checkbox' id='check_" + i
                                    + "' checked='true' value='" + designatedMachine.machine + "'>" + designatedMachine.machine + "</input>";
                        } else {
                            content += "<input type='checkbox' id='check_" + i
                                    + "' value='" + designatedMachine.machine + "'>" + designatedMachine.machine + "</input>";
                        }

                    }
                    $("#machines-count").val(jsonArray.length);
                    $("#designatedJobId").val(jobId);
                    $("#designatedGroupId").val(groupId);
                    content += "<br>";
                    $("#machines").html(content);
                    $("#machines-modal").show();
                } else {
                    $.toast({
                        text : json.errMsg,
                        position : 'top-right',
                        bgColor : 'red',
                        textColor : '#eee',
                        hideAfter : false
                    });
                }
            },
            error:function(xhr, status, error){
                $.toast({
                    text : "获取失败!",
                    position : 'top-right',
                    bgColor : 'red',
                    textColor : '#eee',
                });
            }
        });
    }

    function updateDesignatedMachine(){
        var path = "jobManager.do?action=JobManageAction&event_submit_do_designated_machine=1";
        var jobId = $("#designatedJobId").val();
        var groupId = $("#designatedGroupId").val();
        var machineCount = $("#machines-count").val();
        var policy = 0;
        if(document.getElementById("designatedPolicy").checked == true) {
            policy = 0;
        } else {
            policy = 1;
        }
        var machineList = [];
        for(i = 0 ; i < machineCount; i++) {
            if(document.getElementById("check_" + i).checked == true) {
                var arr  ={
                    "machine" : $("#check_" + i).val(),
                }
                machineList.push(arr);
            }
        }

        jQuery.ajax({
            url: path,
            type: "POST",
            dataType:'json',
            data:{'jobId': jobId, 'groupId':groupId, 'policy':policy, 'data': JSON.stringify(machineList)},
            success:function(json){
                if(json.success == true){
                    $.toast({
                        text : "设置成功!",
                        position : 'top-right',
                        bgColor : 'green',
                        textColor : '#eee',
                        hideAfter : true
                    });
                } else {
                    $.toast({
                        text : json.errMsg,
                        position : 'top-right',
                        bgColor : 'red',
                        textColor : '#eee',
                        hideAfter : false
                    });
                }
                $("[name = designatedPolicy]:checkbox").attr("checked", true);
                for(i = 0 ; i < machineCount; i++) {
                    $("[name = check_" + i + "]:checkbox").attr("checked", false);
                }
                $("#machines-modal").hide();
            },
            error:function(xhr, status, error){
                $.toast({
                    text : "设置失败!",
                    position : 'top-right',
                    bgColor : 'red',
                    textColor : '#eee',
                });
            }
        });
    }
	
	function jobInfo(jobId){
		var path = "jobManager.do?action=JobManageAction&event_submit_do_get_job_config=1";
		jQuery.ajax({
			url: path,
			type: "POST",
			dataType:'json',
			data:{'jobId': jobId, 'clusterId':$("#clusterId").val()},
			success:function(json){
				if(json.success == true){
					job = json.jobConfig;
					// 弹出框
					$("#job-dialog").show();
					// 设置值
					$("#jobDesc").val(job.jobDesc);
					$("#jobProcessor").val(job.jobProcessor);
                    $("#jobArguments").val(job.jobArguments);
                    if(job.firePolicy == 1) {
                        document.getElementById("firePolicy").checked=true;
//                        $("[name = firePolicy]:checkbox").attr("checked", true);
                    } else {
                        document.getElementById("firePolicy").checked=false;
//                        $("[name = firePolicy]:checkbox").attr("checked", false);
                    }
					$("#jobLevel").val(job.level);
					
					$("#cronGen").hide();
					
					/**
    					$("#jobDesc").attr("readonly","readonly");
    					$("#jobProcessor").attr("readonly","readonly");
    					$("#firePolicy").attr("readonly","readonly");
    					$("#jobType").attr("readonly","readonly");
					**/
					$("#jobOk").hide();
					
					if(job.jobType == 0) {
						$("#timing").val(0);
						$("#parallel").val(0);
						$("#expContent").hide();
					} else if(job.jobType == 1) {
						$("#timing").val(1);
						$("#parallel").val(0);
						$("#expContent").show();
						$("#cronExp").val(job.cronExpression);
					} else if(job.jobType == 2) {
						$("#timing").val(0);
						$("#parallel").val(2);
						$("#expContent").hide();
					} else if(job.jobType == 3) {
						$("#timing").val(1);
						$("#parallel").val(2);
						$("#expContent").show();
						$("#cronExp").val(job.cronExpression);
					} else if(job.jobType == 4) {
						$("#timing").val(0);
						$("#parallel").val(4);
						$("#expContent").hide();
					} else if(job.jobType == 5) {
						$("#timing").val(1);
						$("#parallel").val(4);
						$("#expContent").show();
						$("#cronExp").val(job.cronExpression);
					}
					
					showJobTips();
					$("#title-modal").text("Job配置信息");
					$("#job-modal").modal();
				}
				else{
                    $.toast({
                        text : "获取失败!原因：" + json.errMsg,
                        position : 'top-right',
                        bgColor : 'red',
                        textColor : '#eee',
                        hideAfter : false
                    });
				}
			}
			,
			error:function(xhr, status, error){
                $.toast({
                    text : "获取失败!",
                    position : 'top-right',
                    bgColor : 'red',
                    textColor : '#eee',
                });
			}
		});
	}
	
	function updateJob(jobId, groupId){
	
		var updateJobFlow = $('#updateJobFlow_' + groupId).val();
		if('true' == updateJobFlow) {
		
			var path = "jobManager.do?action=JobManageAction&event_submit_do_start_flow=1";
			jQuery.ajax({
                url: path,
                type: "POST",
                dataType:'json',
                data:{
                    'operationObjectId':jobId,
					'processCode':'updateJobFlow',
					'title':'【DTS】申请修改Job',
					'key':'label_1445915405194',
					'value':'申请修改Job'
                }
                ,
                success:function(json){
                    if(json.success == true) {
						if('agree' == json.msg) {
							updateJobComp(jobId, groupId);
						} else {
                        	alert(json.msg);
						}
                    } else {
                        $.toast({
                            text : "创建失败!原因:" + json.errMsg,
                            position : 'top-right',
                            hideAfter : false
                        });
                    }
                }
                ,
                error:function(xhr, status, error){
                    $.toast({
                        text : "创建审批流程失败!",
                        position : 'top-right'
                    });
                }
            });
			
		} else {
			updateJobComp(jobId, groupId);
		}
	
		
	}
	
	function updateJobComp(jobId, groupId){
		var path = "jobManager.do?action=JobManageAction&event_submit_do_get_job_config=1";
		jQuery.ajax({
			url: path,
			type: "POST",
			dataType:'json',
			data:{'jobId': jobId}
			,
			success:function(json){
				if(json.success == true){
					job = json.jobConfig;
					// 弹出框
					$("#job-dialog").show();
					// 设置值
					$("#jobDesc").val(job.jobDesc);
					$("#jobProcessor").val(job.jobProcessor);
                    $("#jobArguments").val(job.jobArguments);
                    if(job.firePolicy == 1) {
                        document.getElementById("firePolicy").checked=true;
//                        $("[name = firePolicy]:checkbox").attr("checked", true);
                    } else {
                        document.getElementById("firePolicy").checked=false;
//                        $("[name = firePolicy]:checkbox").attr("checked", false);
                    }
					$("#updateJobId").val(jobId);
					$("#groupModalId").val(groupId);
					$("#jobLevel").val(job.level);
					$("#cronGen").show();
					
					$("#jobActionType").val(1);
					$("#groupModalId").val(groupId);
					$("#title-modal").text("Job修改");
					
					if(job.jobType == 0) {
						$("#timing").val(0);
						$("#parallel").val(0);
						$("#expContent").hide();
					} else if(job.jobType == 1) {
						$("#timing").val(1);
						$("#parallel").val(0);
						$("#expContent").show();
						$("#cronExp").val(job.cronExpression);
					} else if(job.jobType == 2) {
						$("#timing").val(0);
						$("#parallel").val(2);
						$("#expContent").hide();
					} else if(job.jobType == 3) {
						$("#timing").val(1);
						$("#parallel").val(2);
						$("#expContent").show();
						$("#cronExp").val(job.cronExpression);
					} else if(job.jobType == 4) {
						$("#timing").val(0);
						$("#parallel").val(4);
						$("#expContent").hide();
					} else if(job.jobType == 5) {
						$("#timing").val(1);
						$("#parallel").val(4);
						$("#expContent").show();
						$("#cronExp").val(job.cronExpression);
					}
					
					showJobTips();
					$("#jobOk").show();
					$("#job-modal").modal();
				}else{
                    $.toast({
                        text : "获取失败!" + json.errMsg,
                        position : 'top-right',
                        bgColor : 'red',
                        textColor : '#eee',
                        hideAfter : false
                    });
				}
			}
			,
			error:function(xhr, status, error){
                $.toast({
                    text : "获取失败!",
                    position : 'top-right',
                    bgColor : 'red',
                    textColor : '#eee',
                });
			}
		}
		);
	}
	
	function deleteJob(jobId, row, groupId){
	
		var deleteJobFlow = $('#deleteJobFlow_' + groupId).val();
		if('true' == deleteJobFlow) {
		
			var path = "jobManager.do?action=JobManageAction&event_submit_do_start_flow=1";
			jQuery.ajax({
                url: path,
                type: "POST",
                dataType:'json',
                data:{
                    'operationObjectId':jobId,
					'processCode':'deleteJobFlow',
					'title':'【DTS】申请删除Job',
					'key':'label_1445916070446',
					'value':'申请删除Job'
                }
                ,
                success:function(json){
                    if(json.success == true) {
						if('agree' == json.msg) {
							deleteJobComp(jobId, row, groupId);
						} else {
                        	alert(json.msg);
						}
                    } else {
                        $.toast({
                            text : "创建失败!原因:" + json.errMsg,
                            position : 'top-right',
                            hideAfter : false
                        });
                    }
                }
                ,
                error:function(xhr, status, error){
                    $.toast({
                        text : "创建审批流程失败!",
                        position : 'top-right'
                    });
                }
            });
			
		} else {
			deleteJobComp(jobId, row, groupId);
		}
	}
	
	// 删除Job
	function deleteJobComp(jobId, row, groupId){
        var result = confirm("确认要删除Job吗？");
        if(true != result) {
            return;
        }
		var path = "jobManager.do?action=JobManageAction&event_submit_do_delete_job=1";
		jQuery.ajax({
			url: path,
			type: "POST",
			dataType:'json',
			data:{'jobId': jobId, 'clusterId':$("#clusterId").val()}
			,
			success:function(json){
				if(json.success == true){
					// 刷新列表;
					initGroupJobsData($('#jobPagination_' + groupId).pageNumber, groupId, $('#jobPagination_' + groupId).pageSize);
                    $("#label_" + groupId).html(parseInt($("#label_" + groupId).html()) - 1);
					//$(row).parent("td").parent("tr").remove();
				}
				else{
                    $.toast({
                        text : "删除Job失败," + json.errMsg,
                        position : 'top-right',
                        bgColor : 'red',
                        textColor : '#eee',
                        hideAfter : false
                    });
				}
			}
			,
			error:function(xhr, status, error){
                $.toast({
                    text : "获取Job失败",
                    position : 'top-right',
                    bgColor : 'red',
                    textColor : '#eee',
                });
			}
		}
		);
	}
	
	// 启用停用Job
	function enableJob(jobId, obj, status) {
		var path = "";
		if(status == '启用') {
			path = "jobManager.do?action=JobManageAction&event_submit_do_enable_job=1";
		} else {
			path = "jobManager.do?action=JobManageAction&event_submit_do_disable_job=1";
		}
		jQuery.ajax({
			url: path,
			type: "POST",
			dataType:'json',
			data:{'jobId': jobId},
			success:function(json){
				if(json.success == true){
					if(obj.innerHTML == '启用') {
						obj.innerHTML = "停用";
					} else {
						obj.innerHTML = "启用";
					}
				} else {
                    $.toast({
                        text : "启用Job失败," + json.errMsg,
                        position : 'top-right',
                        bgColor : 'red',
                        textColor : '#eee',
                        hideAfter : false
                    });
				}
			}
			,
			error:function(xhr, status, error){
                $.toast({
                    text : "请求异常！",
                    position : 'top-right',
                    bgColor : 'red',
                    textColor : '#eee',
                });
			}
		}
		);
	}
	
	// 删除组;
	function deleteGroup(groupId){
        var result = confirm("确认要删除该组吗？");
        if(true != result) {
            return;
        }
		var path = "jobManager.do?action=JobManageAction&event_submit_do_delete_group=1";
		var serverClusterId = $('#clusterId').val();
		jQuery.ajax({
			url: path,
			type: "POST",
			dataType:'json',
			data:{'groupId': groupId}
			,
			success:function(json){
				if(json.success == true){
					location.href = "jobManager.htm?serverClusterId=" + serverClusterId;
				}
				else{
                    $.toast({
                        text : "删除组失败，" + json.errMsg,
                        position : 'top-right',
                        bgColor : 'red',
                        textColor : '#eee',
                        hideAfter : false
                    });
				}
			}
			,
			error:function(xhr, status, error){
                $.toast({
                    text : "请求异常！",
                    position : 'top-right',
                    bgColor : 'red',
                    textColor : '#eee',
                });
			}
		}
		);
	}

    function trim(str){ //删除左右两端的空格
    　　 return str.replace(/(^\s*)|(\s*$)/g, "");
　　 }

</script>